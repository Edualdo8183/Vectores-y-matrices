Primer ejercicio 
import numpy as np

def es_matriz_identidad(matriz):
    filas, columnas = matriz.shape
    if filas != columnas:
        return False
    for i in range(filas):
        for j in range(columnas):
            if i == j and matriz[i, j] != 1:
                return False
            elif i != j and matriz[i, j] != 0:
                return False
    return True

matriz = np.array([[1, 0, 0], [0, 1, 0], [0, 0, 1]])
if es_matriz_identidad(matriz):
    print("La matriz es identidad.")
else:
    print("La matriz no es identidad.")

Sin numpty
def es_matriz_identidad(matriz):
    filas = len(matriz)
    columnas = len(matriz[0])
    if filas != columnas:
        return False
    for i in range(filas):
        for j in range(columnas):
            if i == j and matriz[i][j] != 1:
                return False
            elif i != j and matriz[i][j] != 0:
                return False
    return True

matriz = [[1, 0, 0], [0, 1, 0], [0, 0, 1]]
if es_matriz_identidad(matriz):
    print("La matriz es identidad.")
else:
    print("La matriz no es identidad.")

Segundo ejercicio:
import numpy as np

def rotar_matriz_90(matriz):
    return np.rot90(matriz, k=-1) 

Tercer ejercicio:
import numpy as np

A = np.array([[1, 2], [3, 4]])
B = np.array([[5, 6], [7, 8]])
C = np.dot(A, B)
print(C)

Cuarto ejercicio:
import numpy as np

A = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
media = np.mean(A)
desviacion = np.std(A)
suma = np.sum(A)
print(media, desviacion, suma) 

Quinto ejercicio:
import numpy as np

filas = int(input("Ingrese el número de filas: "))
columnas = int(input("Ingrese el número de columnas: "))

print("Ingrese los valores de la primera matriz:")
matriz1 = np.array([[int(input()) for _ in range(columnas)] for _ in range(filas)])

print("Ingrese los valores de la segunda matriz:")
matriz2 = np.array([[int(input()) for _ in range(columnas)] for _ in range(filas)])

print(matriz1 == matriz2) 